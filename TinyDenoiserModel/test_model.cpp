#include "model.h"
#include <stdio.h>

model_data_type_t test_data[1][257][1] = {
    {{-0.07882494f16}, {-0.78509321f16}, {-0.7258503f16},  {0.77627768f16},  {0.66143638f16},  {0.9405806f16},
     {0.23252621f16},  {-0.56000659f16}, {-0.2521177f16},  {-0.3419224f16},  {0.26434342f16},  {0.61925452f16},
     {0.29043738f16},  {-0.4756347f16},  {-0.06087978f16}, {0.67780363f16},  {-0.26461738f16}, {-0.10966271f16},
     {-0.31105678f16}, {-0.33246396f16}, {-0.55735619f16}, {-0.61016446f16}, {0.38016621f16},  {0.10358622f16},
     {-0.22683132f16}, {-0.62536004f16}, {-0.52709448f16}, {-0.94083557f16}, {-0.50009169f16}, {-0.54244678f16},
     {-0.0775174f16},  {-0.93130772f16}, {0.64097592f16},  {0.84189556f16},  {-0.10372878f16}, {-0.28639737f16},
     {-0.02933283f16}, {-0.59716739f16}, {-0.32144393f16}, {-0.29083941f16}, {-0.40902322f16}, {-0.84024254f16},
     {-0.354526f16},   {0.76655162f16},  {-0.76949814f16}, {0.44749193f16},  {-0.59713734f16}, {-0.22045572f16},
     {-0.06853448f16}, {-0.85385346f16}, {0.45179226f16},  {0.94790547f16},  {0.95636841f16},  {0.52008252f16},
     {0.41968019f16},  {-0.47477866f16}, {0.54734237f16},  {-0.15476558f16}, {0.2324944f16},   {-0.56120842f16},
     {0.92517248f16},  {0.05720252f16},  {-0.34261229f16}, {-0.68834308f16}, {-0.22763201f16}, {-0.61297305f16},
     {-0.86992699f16}, {0.04949611f16},  {0.46874574f16},  {0.57357715f16},  {0.82083892f16},  {0.07038925f16},
     {0.00454734f16},  {-0.18961375f16}, {0.28293371f16},  {0.67857096f16},  {0.70090894f16},  {-0.10037076f16},
     {0.51452656f16},  {-0.70960249f16}, {-0.24128505f16}, {-0.95464337f16}, {-0.37980288f16}, {0.1984061f16},
     {-0.85635756f16}, {-0.70768825f16}, {-0.9078072f16},  {-0.53328739f16}, {-0.71346517f16}, {-0.15254658f16},
     {0.7423086f16},   {0.61547725f16},  {-0.17757588f16}, {-0.09728307f16}, {-0.96871529f16}, {-0.54283983f16},
     {0.84346809f16},  {-0.07259247f16}, {0.05909187f16},  {-0.84831126f16}, {0.64200401f16},  {-0.4329532f16},
     {-0.90319878f16}, {0.06987025f16},  {0.25835816f16},  {-0.98860712f16}, {-0.95457428f16}, {-0.74805204f16},
     {-0.75183718f16}, {0.50946534f16},  {-0.61836642f16}, {0.81286919f16},  {-0.3494267f16},  {0.97998125f16},
     {0.61555105f16},  {0.20507646f16},  {-0.52341271f16}, {-0.05736871f16}, {0.8469073f16},   {0.22700132f16},
     {0.61251285f16},  {0.09525037f16},  {0.84223844f16},  {0.17930586f16},  {0.8193469f16},   {0.46628656f16},
     {-0.17106847f16}, {0.65635758f16},  {-0.83420331f16}, {-0.95669667f16}, {0.97324197f16},  {0.16998406f16},
     {-0.0096312f16},  {-0.54299603f16}, {0.08090552f16},  {0.20100732f16},  {-0.39854013f16}, {-0.61230117f16},
     {-0.07967114f16}, {0.7225014f16},   {-0.50041056f16}, {0.06920175f16},  {0.13899331f16},  {0.6262772f16},
     {-0.45775053f16}, {0.66942861f16},  {-0.98381645f16}, {-0.22699188f16}, {-0.11297529f16}, {-0.48894028f16},
     {-0.12849601f16}, {0.80948685f16},  {0.28885433f16},  {-0.50879052f16}, {-0.41383688f16}, {-0.53956644f16},
     {0.6344315f16},   {-0.36775819f16}, {0.78683872f16},  {-0.50839603f16}, {-0.08792324f16}, {-0.84382341f16},
     {-0.12497465f16}, {0.77528152f16},  {-0.35619713f16}, {0.29691948f16},  {-0.77688149f16}, {-0.6306732f16},
     {0.07286399f16},  {-0.31839674f16}, {0.91284136f16},  {0.10645979f16},  {-0.44256238f16}, {-0.37515726f16},
     {0.23056539f16},  {-0.70552085f16}, {-0.39676927f16}, {-0.56725182f16}, {-0.38514074f16}, {-0.47163709f16},
     {0.88737064f16},  {0.65625784f16},  {-0.48715506f16}, {-0.80403674f16}, {0.43841511f16},  {0.75046172f16},
     {0.55856888f16},  {-0.1369066f16},  {0.82242227f16},  {0.06900908f16},  {0.99882987f16},  {0.60895619f16},
     {0.95455468f16},  {-0.25367984f16}, {0.74711712f16},  {-0.61115109f16}, {-0.75720627f16}, {0.23969158f16},
     {0.06947253f16},  {-0.68993361f16}, {-0.278642f16},   {0.48907664f16},  {0.23570734f16},  {0.08366088f16},
     {0.22880857f16},  {-0.17425753f16}, {0.10443157f16},  {0.60429078f16},  {0.00951284f16},  {-0.97184727f16},
     {0.69363607f16},  {0.3681106f16},   {-0.30806945f16}, {-0.59047025f16}, {0.17716675f16},  {-0.01776544f16},
     {0.23188452f16},  {-0.78563728f16}, {0.71587698f16},  {-0.75205242f16}, {0.14047634f16},  {0.47187649f16},
     {0.42547647f16},  {-0.95447321f16}, {-0.09796836f16}, {0.53215892f16},  {-0.18473518f16}, {0.09257838f16},
     {0.59915133f16},  {0.62949707f16},  {-0.30363615f16}, {0.54139057f16},  {0.95674874f16},  {0.64503984f16},
     {0.22764157f16},  {-0.97868512f16}, {0.32411267f16},  {-0.12441069f16}, {0.96099791f16},  {-0.0217678f16},
     {0.51493437f16},  {0.39297568f16},  {0.51687258f16},  {0.08421333f16},  {-0.00584229f16}, {0.05638147f16},
     {0.92319746f16},  {-0.87024594f16}, {-0.13969839f16}, {0.91023789f16},  {-0.01363805f16}, {-0.0432568f16},
     {0.33101641f16},  {0.55607275f16},  {-0.36797399f16}, {-0.48790539f16}, {-0.45781331f16}}};

int main() {
	tinydenoiser_model_init();
	model_data_type_t output[1][257][1];
	tinydenoiser_inference(test_data, output);
	printf("model_data_type_t output[1][257][1] = {{\n");
	for(size_t i = 0; i < 257; i++) {
		printf("{%e}", (float) output[0][i][0]);
		if(i == 256) {
		} else if((i + 1) % 6 == 0) {
			printf(",\n");
		} else {
			printf(",  ");
		}
	}
	printf("}};\n");
	return 0;
}